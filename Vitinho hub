-- Carregar o script diretamente do GitHub
local VitinhoHub = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vitorzl/Blox/main/Vitinho%20hub"))()

-- Definir o ícone do Hub com o ID da imagem
local hubIcon = "rbxassetid://16781543854"  -- ID da imagem desejada
Window:SetIcon(hubIcon)  -- Definir o ícone

-- Anti-Cheat Bypass Básico
pcall(function()
    if getconnections then
        for _, v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
            v:Disable()
        end
    end
end)

-- Bloqueio de Kick Manual
local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldNamecall = mt.__namecall
mt.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if tostring(self) == "Kick" and method == "FireServer" then
        return warn("Tentativa de kick bloqueada!")
    end
    return oldNamecall(self, ...)
end)

-- Painel de Segurança
local SecurityTab = Window:NewTab("Segurança")
local SecuritySection = SecurityTab:NewSection("Proteções")

-- Detector de Moderadores/Admins conhecidos
local knownMods = {1, 2825391, 64481938}  -- IDs dos moderadores

VitinhoHub.AntiMod = true

function VitinhoHub:VerificarModeradores()
    if not VitinhoHub.AntiMod then return end
    for _, plr in pairs(game.Players:GetPlayers()) do
        if table.find(knownMods, plr.UserId) then
            warn("Moderador detectado: " .. plr.Name)
            game.StarterGui:SetCore("SendNotification", { Title = "Alerta!", Text = "Moderador detectado! Saindo...", Duration = 10 })
            task.wait(2)
            game.Players.LocalPlayer:Kick("Moderador detectado!")
        end
    end
end

game.Players.PlayerAdded:Connect(function(plr)
    if table.find(knownMods, plr.UserId) then
        VitinhoHub:VerificarModeradores()
    end
end)

-- Toggle para ativar ou desativar o detector de moderador
SecuritySection:NewToggle("Detector de Moderador", "Proteção contra entrada de staff", function(state)
    VitinhoHub.AntiMod = state
    if state then
        print("Detector de Moderador ativado")
        VitinhoHub:VerificarModeradores()
    else
        print("Detector de Moderador desativado")
    end
end)

-- GUI Principal
local Main = Window:NewTab("Main")
local FarmSection = Main:NewSection("Auto Farm")
local StatsSection = Main:NewSection("Auto Stats")

local TeleportTab = Window:NewTab("Teleport")
local TeleportSection = TeleportTab:NewSection("Ilhas")

local BossTab = Window:NewTab("Bosses")
local BossSection = BossTab:NewSection("Teleportar para Boss")

VitinhoHub.AutoFarm = false
VitinhoHub.AutoQuest = false
VitinhoHub.AutoHaki = false
VitinhoHub.AutoStats = false

function VitinhoHub:AtivarHaki()
    local success, err = pcall(function()
        commF:InvokeServer("Buso")
    end)
    if not success then
        warn("Erro ao ativar o Haki:", err)
    end
end

function VitinhoHub:AutoFarm()
    while VitinhoHub.AutoFarm do
        task.wait()
        if game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            self:AtivarHaki()
        end
    end
end

function VitinhoHub:AutoDistribuirStats()
    while VitinhoHub.AutoStats do
        task.wait(1)
        local success, err = pcall(function()
            commF:InvokeServer("AddPoint", "Melee", 1)
        end)
        if not success then
            warn("Erro ao distribuir pontos:", err)
        end
    end
end

FarmSection:NewToggle("Auto Farm", "Farm automático de inimigos", function(state)
    VitinhoHub.AutoFarm = state
    if state then
        print("Auto Farm ativado")
        VitinhoHub:AutoFarm()
    else
        print("Auto Farm desativado")
    end
end)

StatsSection:NewToggle("Auto Stats", "Distribuir pontos automaticamente em Melee", function(state)
    VitinhoHub.AutoStats = state
    if state then
        print("Auto Stats ativado")
        VitinhoHub:AutoDistribuirStats()
    else
        print("Auto Stats desativado")
    end
end)

-- Lista de ilhas para teleportar
local teleportList = {
    ["Sea 1"] = {
        ["Marine Starter"] = CFrame.new(-260, 10, 2060),
        ["Pirate Starter"] = CFrame.new(1034, 10, 1325),
        ["Jungle"] = CFrame.new(-1225, 10, 389)
    },
    ["Sea 2"] = {
        ["Kingdom of Rose"] = CFrame.new(-400, 100, 300),
        ["Green Zone"] = CFrame.new(-2290, 72, -730)
    },
    ["Sea 3"] = {
        ["Port Town"] = CFrame.new(-285, 43, 5475),
        ["Hydra Island"] = CFrame.new(5227, 603, -1385)
    }
}

for sea, islands in pairs(teleportList) do
    TeleportSection:NewLabel(sea)
    for name, pos in pairs(islands) do
        TeleportSection:NewButton(name, "Teleporta para " .. name, function()
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
            end
        end)
    end
end

-- Lista de bosses para teleportar
local bosses = {
    ["Sea 1"] = {
        ["Gorila Rei"] = CFrame.new(-1120, 10, 425),
        ["Yeti"] = CFrame.new(1100, 10, -1450)
    },
    ["Sea 2"] = {
        ["Don Swan"] = CFrame.new(2285, 15, 875),
        ["Fajita"] = CFrame.new(-5200, 330, -2500)
    },
    ["Sea 3"] = {
        ["Katsu"] = CFrame.new(5620, 200, -2300),
        ["Captain Elephant"] = CFrame.new(-13250, 350, -7800)
    }
}

for sea, group in pairs(bosses) do
    BossSection:NewLabel(sea)
    for name, pos in pairs(group) do
        BossSection:NewButton(name, "Teleporta para o boss " .. name, function()
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
            end
        end)
    end
end

return VitinhoHub
